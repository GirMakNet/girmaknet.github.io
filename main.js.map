{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/auth/auth-routing.module.ts","webpack:///./src/app/auth/auth.module.ts","webpack:///./src/app/auth/components/login-form.component.ts","webpack:///./src/app/auth/containers/login-page.component.ts","webpack:///./src/app/auth/state/auth.query.ts","webpack:///./src/app/auth/state/auth.service.ts","webpack:///./src/app/auth/state/auth.store.ts","webpack:///./src/app/books/state/books.query.ts","webpack:///./src/app/books/state/books.service.ts","webpack:///./src/app/books/state/books.store.ts","webpack:///./src/app/core/components/layout.component.ts","webpack:///./src/app/core/components/nav-item.component.ts","webpack:///./src/app/core/components/sidenav.component.ts","webpack:///./src/app/core/components/toolbar.component.ts","webpack:///./src/app/core/containers/app.component.ts","webpack:///./src/app/core/containers/not-found-page.component.ts","webpack:///./src/app/core/core.module.ts","webpack:///./src/app/core/services/google-books.service.ts","webpack:///./src/app/core/state/layout.query.ts","webpack:///./src/app/core/state/layout.service.ts","webpack:///./src/app/core/state/layout.store.ts","webpack:///./src/app/material/index.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./books/books.module\": [\n\t\t\"./src/app/books/books.module.ts\",\n\t\t\"books-books-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar module = __webpack_require__(ids[0]);\n\t\treturn module;\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","﻿import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { NotFoundPageComponent } from './core/containers/not-found-page.component';\r\n\r\nexport const routes: Routes = [\r\n  { path: '', redirectTo: '/books', pathMatch: 'full' },\r\n  {\r\n    path: 'books',\r\n    loadChildren: './books/books.module#BooksModule',\r\n    canActivate: [AuthGuard],\r\n  },\r\n  { path: '**', component: NotFoundPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CoreModule } from './core/core.module';\r\nimport { AuthModule } from './auth/auth.module';\r\nimport { AppComponent } from './core/containers/app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AkitaNgDevtools } from '@datorama/akita-ngdevtools';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AkitaNgDevtools.forRoot(),\r\n    CommonModule,\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    AuthModule.forRoot(),\r\n    AppRoutingModule,\r\n    CoreModule.forRoot()\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, take, switchMap } from 'rxjs/operators';\r\nimport { AuthQuery } from './state/auth.query';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private authQuery: AuthQuery,\r\n              private router: Router) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return this.authQuery.isLoggedIn$.pipe(\r\n      take(1),\r\n      switchMap((isLoggedIn) => {\r\n        if (!isLoggedIn) {\r\n          this.router.navigate(['/login']);\r\n        }\r\n        return of(isLoggedIn);\r\n      })\r\n    );\r\n  }\r\n}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from './containers/login-page.component';\r\n\r\nconst routes: Routes = [{ path: 'login', component: LoginPageComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AuthRoutingModule {}\r\n","﻿import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { LoginPageComponent } from './containers/login-page.component';\r\nimport { LoginFormComponent } from './components/login-form.component';\r\n\r\nimport { AuthGuard } from './auth-guard.service';\r\nimport { MaterialModule } from '../material';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\nimport { AuthQuery } from './state/auth.query';\r\nimport { AuthStore } from './state/auth.store';\r\nimport { AuthService } from './state/auth.service'; \r\n\r\nexport const COMPONENTS = [LoginPageComponent, LoginFormComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ReactiveFormsModule, MaterialModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS\r\n})\r\nexport class AuthModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: RootAuthModule,\r\n      providers: [\r\n        AuthService,\r\n        AuthGuard,\r\n        AuthQuery,\r\n        AuthStore\r\n      ]\r\n    };\r\n  }\r\n}\r\n\r\n@NgModule({\r\n  imports: [AuthModule, AuthRoutingModule]\r\n})\r\nexport class RootAuthModule { }\r\n","﻿import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { FormGroup, FormControl } from '@angular/forms';\r\nimport { Creds } from '../state/auth.service';\r\n\r\n@Component({\r\n  selector: 'bc-login-form',\r\n  template: `\r\n    <mat-card>\r\n      <mat-card-title>Login</mat-card-title>\r\n      <mat-card-content>\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"text\" matInput placeholder=\"Username\" formControlName=\"username\">\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p>\r\n            <mat-form-field>\r\n              <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\r\n            </mat-form-field>\r\n          </p>\r\n\r\n          <p *ngIf=\"errorMessage\" class=\"loginError\">\r\n            {{ errorMessage }}\r\n          </p>\r\n\r\n          <p class=\"loginButtons\">\r\n            <button type=\"submit\" mat-button>Login</button>\r\n          </p>\r\n\r\n        </form>\r\n      </mat-card-content>\r\n    </mat-card>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        display: flex;\r\n        justify-content: center;\r\n        margin: 72px 0;\r\n      }\r\n\r\n      .mat-form-field {\r\n        width: 100%;\r\n        min-width: 300px;\r\n      }\r\n\r\n      mat-card-title,\r\n      mat-card-content {\r\n        display: flex;\r\n        justify-content: center;\r\n      }\r\n\r\n      .loginError {\r\n        padding: 16px;\r\n        width: 300px;\r\n        color: white;\r\n        background-color: red;\r\n      }\r\n\r\n      .loginButtons {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n  @Input()\r\n  set pending(isPending: boolean) {\r\n    if (isPending) {\r\n      this.form.disable();\r\n    } else {\r\n      this.form.enable();\r\n    }\r\n  }\r\n\r\n  @Input() errorMessage: string | null;\r\n\r\n  @Output() submitted = new EventEmitter<Creds>();\r\n\r\n  form: FormGroup = new FormGroup({\r\n    username: new FormControl(''),\r\n    password: new FormControl(''),\r\n  });\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  submit() {\r\n    if (this.form.valid) {\r\n      this.submitted.emit(this.form.value);\r\n    }\r\n  }\r\n}\r\n","﻿import { Component } from '@angular/core';\r\nimport { Creds } from '../state/auth.service';\r\nimport { AuthService } from '../state/auth.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'bc-login-page',\r\n  template: `\r\n    <bc-login-form\r\n      (submitted)=\"onSubmit($event)\">\r\n    </bc-login-form>\r\n  `\r\n})\r\nexport class LoginPageComponent {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  onSubmit(creds: Creds) {\r\n    this.authService.login(creds).subscribe();\r\n  }\r\n}\r\n","﻿import { AuthStore } from './auth.store';\r\nimport { AuthState } from './auth.store';\r\nimport { Query, toBoolean } from '@datorama/akita';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class AuthQuery extends Query<AuthState> {\r\n\r\n  isLoggedIn$ = this.select(state => toBoolean(state.user));\r\n\r\n  constructor(protected store: AuthStore) {\r\n    super(store);\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthStore, User } from './auth.store';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Observable, of, throwError } from 'rxjs';\r\n\r\nexport type Creds = { password: string, username: string };\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(\r\n    private authStore: AuthStore,\r\n    private router: Router\r\n  ) { }\r\n\r\n  login(creds: Creds) {\r\n    return this.callServer(creds).pipe(\r\n      map(user => {\r\n        this.authStore.login(user);\r\n        this.router.navigate(['/']);\r\n      }),\r\n      catchError(error => of(error))\r\n    );\r\n  }\r\n\r\n  logout() {\r\n    this.authStore.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n\r\n  /**\r\n   * \r\n   * \r\n   * Simulate server call\r\n   */\r\n  private callServer({ username, password }: Creds): Observable<User> {\r\n    if (username !== 'test') {\r\n      return throwError('Invalid username or password');\r\n    }\r\n\r\n    return of({ name: 'User' });\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Store, StoreConfig } from '@datorama/akita';\r\n\r\nexport type User = {\r\n  name: string;\r\n}\r\n\r\nexport type AuthState = {\r\n  user: User | null;\r\n}\r\n\r\nexport const initialState: AuthState = {\r\n  user: JSON.parse(localStorage.getItem('user')) || null\r\n};\r\n\r\n\r\n@StoreConfig({ name: 'auth' })\r\nexport class AuthStore extends Store<AuthState> {\r\n  constructor() {\r\n    super(initialState);\r\n  }\r\n\r\n  login(user: User) {\r\n    this.update({ user });\r\n    /** In real life, you will abstract this to service. */\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n\r\n  logout() {\r\n    /** In real life, you will abstract this to service. */\r\n    localStorage.removeItem('user');\r\n    this.update(initialState);\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport { BooksStore, BooksState } from './books.store';\r\nimport { Book } from './book.model';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class BooksQuery extends QueryEntity<BooksState, Book> {\r\n  constructor(protected store: BooksStore) {\r\n    super(store);\r\n  }\r\n\r\n  selectSearchTerm$ = this.select(state => state.searchTerm);\r\n  selectResultIds$ = this.select(state => state.resultIds);\r\n  selectCollection$ = this.select(state => state.collection);\r\n\r\n  isInCollection$ = this.selectCollection$.pipe(map(ids => ids.includes(this.getActiveId()) === true))\r\n\r\n  get getSearchTerm() {\r\n    return this.getSnapshot().searchTerm;\r\n  }\r\n  \r\n  get collection() {\r\n    return this.getSnapshot().collection;\r\n  }\r\n\r\n  get nonCollectionBooks(): string[] {\r\n    return this.getAll({\r\n      filterBy: ({ id }) => this.collection.includes(id) === false\r\n    }).map(({ id }) => id);\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { ID, push, transaction } from '@datorama/akita';\r\nimport { BooksStore } from './books.store';\r\nimport { GoogleBooksService } from '../../core/services/google-books.service';\r\nimport { BooksQuery } from './books.query';\r\nimport { Book } from './book.model';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class BooksService {\r\n  constructor(\r\n    private bookStore: BooksStore,\r\n    private bookQuery: BooksQuery,\r\n    private googleService: GoogleBooksService\r\n  ) { }\r\n\r\n  searchBooks(searchTerm: string) {\r\n    this.bookStore.setLoading(true);\r\n    this.googleService.searchBooks(searchTerm).subscribe(books => {\r\n      this.updateBooks(books);\r\n    });\r\n  }\r\n\r\n  @transaction()\r\n  private updateBooks(books) {\r\n    const nonCollection = this.bookQuery.nonCollectionBooks;\r\n    this.bookStore.remove([...nonCollection]);\r\n    this.add(books);\r\n    this.bookStore.updateResultIds(books.map(({ id }) => id));\r\n    this.bookStore.setLoading(false);\r\n  }\r\n\r\n  updateSearchTerm(searchTerm: string) {\r\n    this.bookStore.updateSearchTerm(searchTerm);\r\n  }\r\n\r\n  setActive(id: ID) {\r\n    this.bookStore.setActive(id);\r\n  }\r\n\r\n  add(books: Book[]) {\r\n    this.bookStore.add(books);\r\n  }\r\n\r\n  loadBooksToStore() {\r\n    const books$ = this.bookQuery.collection.map(id => this.googleService.retrieveBook(id));\r\n    forkJoin(books$).subscribe(books => this.add(books));\r\n  }\r\n\r\n  updateCollection(bookId: ID) {\r\n    this.bookStore.updateCollection(bookId);\r\n    /** In real life, you will abstract this to service. */\r\n    localStorage.setItem(\r\n      'collection',\r\n      JSON.stringify(this.bookQuery.collection)\r\n    );\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { EntityState, EntityStore, StoreConfig, ID, toggle } from '@datorama/akita';\r\nimport { Book } from './book.model';\r\n\r\nexport interface BooksState extends EntityState<Book> {\r\n  searchTerm: string;\r\n  resultIds: ID[];\r\n  collection: ID[];\r\n}\r\n\r\nconst initialState = {\r\n  searchTerm: '',\r\n  resultIds: [],\r\n  loading: false,\r\n  collection: JSON.parse(localStorage.getItem('collection') as string) || []\r\n};\r\n\r\n@Injectable()\r\n@StoreConfig({ name: 'books' })\r\nexport class BooksStore extends EntityStore<BooksState, Book> {\r\n  constructor() {\r\n    super(initialState);\r\n  }\r\n\r\n  updateSearchTerm(searchTerm: string) {\r\n    this.updateRoot({ searchTerm });\r\n  }\r\n\r\n  updateResultIds(resultIds: ID[]) {\r\n    this.updateRoot({ resultIds });\r\n  }\r\n\r\n  updateCollection(id: ID) {\r\n    this.updateRoot(state => ({ collection: toggle(state.collection, id) }));\r\n  }\r\n}\r\n","﻿import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-layout',\r\n  template: `\r\n    <mat-sidenav-container fullscreen>\r\n\r\n      <ng-content></ng-content>\r\n\r\n    </mat-sidenav-container>\r\n  `,\r\n  styles: [\r\n    `\r\n      mat-sidenav-container {\r\n        background: rgba(0, 0, 0, 0.03);\r\n      }\r\n\r\n      *,\r\n      /deep/ * {\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class LayoutComponent {}\r\n","﻿import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-nav-item',\r\n  template: `\r\n    <a mat-list-item [routerLink]=\"routerLink\" (click)=\"navigate.emit()\">\r\n      <mat-icon mat-list-icon>{{ icon }}</mat-icon>\r\n      <span mat-line><ng-content></ng-content></span>\r\n      <span mat-line class=\"secondary\">{{ hint }}</span>\r\n    </a>\r\n  `,\r\n  styles: [\r\n    `\r\n      .secondary {\r\n        color: rgba(0, 0, 0, 0.54);\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NavItemComponent {\r\n  @Input() icon = '';\r\n  @Input() hint = '';\r\n  @Input() routerLink: string | any[] = '/';\r\n  @Output() navigate = new EventEmitter();\r\n}\r\n","﻿import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-sidenav',\r\n  template: `\r\n    <mat-sidenav [opened]=\"open\">\r\n      <mat-nav-list>\r\n        <ng-content></ng-content>\r\n      </mat-nav-list>\r\n    </mat-sidenav>\r\n  `,\r\n  styles: [\r\n    `\r\n      mat-sidenav {\r\n        width: 300px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class SidenavComponent {\r\n  @Input() open = false;\r\n}\r\n","﻿import { Component, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-toolbar',\r\n  template: `\r\n    <mat-toolbar color=\"primary\">\r\n      <button mat-icon-button (click)=\"openMenu.emit()\">\r\n        <mat-icon>menu</mat-icon>\r\n      </button>\r\n      <ng-content></ng-content>\r\n    </mat-toolbar>\r\n  `,\r\n})\r\nexport class ToolbarComponent {\r\n  @Output() openMenu = new EventEmitter();\r\n}\r\n","﻿import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthQuery } from '../../auth/state/auth.query';\r\nimport { AuthService } from '../../auth/state/auth.service';\r\nimport { LayoutQuery } from '../state/layout.query';\r\nimport { LayoutService } from '../state/layout.service';\r\nimport { BooksService } from '../../books/state/books.service';\r\n\r\n@Component({\r\n  selector: 'bc-app',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <bc-layout>\r\n      <bc-sidenav [open]=\"showSidenav$ | async\">\r\n        <bc-nav-item (navigate)=\"closeSidenav()\" *ngIf=\"loggedIn$ | async\" routerLink=\"/\" icon=\"book\" hint=\"View your book collection\">\r\n          My Collection\r\n        </bc-nav-item>\r\n        <bc-nav-item (navigate)=\"closeSidenav()\" *ngIf=\"loggedIn$ | async\" routerLink=\"/books/find\" icon=\"search\" hint=\"Find your next book!\">\r\n          Browse Books\r\n        </bc-nav-item>\r\n        <bc-nav-item (navigate)=\"closeSidenav()\" *ngIf=\"!(loggedIn$ | async)\">\r\n          Sign In\r\n        </bc-nav-item>\r\n        <bc-nav-item (navigate)=\"logout()\" *ngIf=\"loggedIn$ | async\">\r\n          Sign Out\r\n        </bc-nav-item>\r\n      </bc-sidenav>\r\n      <bc-toolbar (openMenu)=\"openSidenav()\">\r\n        Book Collection\r\n      </bc-toolbar>\r\n\r\n      <router-outlet></router-outlet>\r\n    </bc-layout>\r\n  `,\r\n})\r\nexport class AppComponent implements OnInit {\r\n  showSidenav$: Observable<boolean>;\r\n  loggedIn$: Observable<boolean>;\r\n\r\n  constructor(private authQuery: AuthQuery,\r\n    private authService: AuthService,\r\n    private bookService: BooksService,\r\n    private layoutQuery: LayoutQuery,\r\n    private layoutService: LayoutService) {\r\n    \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.showSidenav$ = this.layoutQuery.sideNavOpen$;\r\n    this.loggedIn$ = this.authQuery.isLoggedIn$;\r\n    this.bookService.loadBooksToStore();\r\n  }\r\n\r\n  closeSidenav() {\r\n    this.layoutService.setSideNavState(false);\r\n  }\r\n\r\n  openSidenav() {\r\n    this.layoutService.setSideNavState(true);\r\n  }\r\n\r\n  logout() {\r\n    this.closeSidenav();\r\n    this.authService.logout();\r\n  }\r\n}\r\n","﻿import { Component, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bc-not-found-page',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <mat-card>\r\n      <mat-card-title>404: Not Found</mat-card-title>\r\n      <mat-card-content>\r\n        <p>Hey! It looks like this page doesn't exist yet.</p>\r\n      </mat-card-content>\r\n      <mat-card-actions>\r\n        <button mat-raised-button color=\"primary\" routerLink=\"/\">Take Me Home</button>\r\n      </mat-card-actions>\r\n    </mat-card>\r\n  `,\r\n  styles: [\r\n    `\r\n      :host {\r\n        text-align: center;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class NotFoundPageComponent {}\r\n","﻿import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AppComponent } from './containers/app.component';\r\nimport { NotFoundPageComponent } from './containers/not-found-page.component';\r\nimport { LayoutComponent } from './components/layout.component';\r\nimport { NavItemComponent } from './components/nav-item.component';\r\nimport { SidenavComponent } from './components/sidenav.component';\r\nimport { ToolbarComponent } from './components/toolbar.component';\r\nimport { MaterialModule } from '../material';\r\n\r\nimport { GoogleBooksService } from './services/google-books.service';\r\nimport { BooksService } from '../books/state/books.service';\r\nimport { BooksStore} from '../books/state/books.store';\r\nimport { BooksQuery} from '../books/state/books.query';\r\n\r\nimport { LayoutService } from './state/layout.service';\r\nimport { LayoutStore } from './state/layout.store';\r\nimport { LayoutQuery } from './state/layout.query';\r\n\r\nexport const COMPONENTS = [\r\n  AppComponent,\r\n  NotFoundPageComponent,\r\n  LayoutComponent,\r\n  NavItemComponent,\r\n  SidenavComponent,\r\n  ToolbarComponent\r\n];\r\n \r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, MaterialModule],\r\n  declarations: COMPONENTS,\r\n  exports: COMPONENTS,\r\n})\r\nexport class CoreModule {\r\n  static forRoot() { \r\n    return {\r\n      ngModule: CoreModule,\r\n      providers: [GoogleBooksService, BooksService, BooksStore, BooksQuery, LayoutService, LayoutStore, LayoutQuery],\r\n    };\r\n  }\r\n}\r\n","﻿import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Book } from '../../books/state/book.model';\r\nimport { ID } from '@datorama/akita';\r\n\r\n@Injectable()\r\nexport class GoogleBooksService {\r\n  private API_PATH = 'https://www.googleapis.com/books/v1/volumes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  searchBooks(queryTitle: ID): Observable<Book[]> {\r\n    return this.http\r\n      .get<{ items: Book[] }>(`${this.API_PATH}?q=${queryTitle}`)\r\n      .pipe(map(books => books.items || []));\r\n  }\r\n\r\n  retrieveBook(volumeId: ID): Observable<Book> {\r\n    return this.http.get<Book>(`${this.API_PATH}/${volumeId}`);\r\n  }\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Query } from '@datorama/akita';\r\nimport { LayoutStore, LayoutState } from './layout.store';\r\n\r\n@Injectable()\r\nexport class LayoutQuery extends Query<LayoutState> {\r\n  sideNavOpen$ = this.select(state => state.sideNavOpen);\r\n\r\n  constructor(protected store: LayoutStore) {\r\n    super(store);\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { LayoutStore } from './layout.store';\r\n\r\n@Injectable()\r\nexport class LayoutService {\r\n\r\n  constructor(private layoutStore: LayoutStore){}\r\n\r\n  setSideNavState(status: boolean) {\r\n    this.layoutStore.updateSideNavState(status);\r\n  }\r\n\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { Store, StoreConfig } from '@datorama/akita';\r\n\r\nexport type LayoutState = {\r\n  sideNavOpen: boolean;\r\n}\r\n\r\nconst initialState = {\r\n  sideNavOpen: false\r\n};\r\n\r\n@StoreConfig({ name: 'layout' })\r\nexport class LayoutStore extends Store<LayoutState> {\r\n\r\n  constructor() {\r\n    super(initialState);\r\n  }\r\n\r\n  updateSideNavState(status: boolean) {\r\n    this.update({ sideNavOpen: status });\r\n  }\r\n\r\n}\r\n\r\n","﻿export * from './material.module';\r\n","﻿import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatListModule,\r\n  MatIconModule,\r\n  MatToolbarModule,\r\n  MatProgressSpinnerModule,\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n  exports: [\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatIconModule,\r\n    MatToolbarModule,\r\n    MatProgressSpinnerModule,\r\n  ],\r\n})\r\nexport class MaterialModule {}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}